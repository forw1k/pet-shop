{"version":3,"sources":["components/Banner/index.jsx","data.js","components/App/index.jsx","index.js"],"names":["Banner","props","item","useState","isSelected","setSelected","isHovered","setIsHovered","isHoveredSelected","setIsHoveredSelected","stocked","isInStock","chosen","isSelectedBanner","isNotSelectedBanner","className","onMouseLeave","onClick","onMouseOver","subtitleAlt","subtitle","title","ingredients","portionAmount","portionText","giftAmount","giftText","slogan","src","image","alt","quantity","unit","aria-hidden","xmlns","viewBox","preserveAspectRatio","fillRule","strokeWidth","d","bannerText","isNotSelected","notInStock","data","id","App","banners","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0940060.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.scss';\r\n\r\nconst Banner = (props) => {\r\n  const { item } = props;\r\n  const [isSelected, setSelected] = useState(item.isSelected);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [isHoveredSelected, setIsHoveredSelected] = useState(false);\r\n  const stocked = item.isInStock ? '' : 'unavailable';\r\n  const chosen = isSelected ? 'selected' : '';\r\n  const isSelectedBanner = !isSelected && item.isInStock;\r\n  const isNotSelectedBanner = isSelected && item.isInStock;\r\n\r\n  return (\r\n    <li className={`banner__item ${stocked || chosen}`}>\r\n      <div\r\n        className=\"card\"\r\n        onMouseLeave={() => {\r\n          isSelected ? setIsHovered(true) : setIsHovered(false);\r\n          setIsHoveredSelected(false);\r\n        }}\r\n        onClick={() => setSelected(!isSelected)}\r\n        onMouseOver={() => isHovered && setIsHoveredSelected(true)}\r\n      >\r\n        <div className=\"information\">\r\n          <span\r\n            className={`common-text ${\r\n              isHoveredSelected && isSelected ? 'subtitle-alt' : 'subtitle'\r\n            }`}\r\n          >\r\n            {isHoveredSelected && isSelected ? item.subtitleAlt : item.subtitle}\r\n          </span>\r\n          <h1 className=\"headline common-text--fat\">{item.title}</h1>\r\n          <h2 className=\"taste common-text--fat\">{item.ingredients}</h2>\r\n          <div className=\"description\">\r\n            <span className=\"common-text common-text--fat common-text--amount\">\r\n              {item.portionAmount}\r\n            </span>\r\n            <span className=\"common-text\">{item.portionText}</span>\r\n          </div>\r\n          <div className=\"description\">\r\n            <span className=\"common-text common-text--fat common-text--amount\">\r\n              {item.giftAmount}\r\n            </span>\r\n            <span className=\"common-text\">{item.giftText}</span>\r\n          </div>\r\n          <span className=\"common-text description\">{item.slogan}</span>\r\n        </div>\r\n        <div className=\"pictures\">\r\n          <img src={item.image} alt=\"\" className=\"pictures__img\" />\r\n          <div className=\"mass\">\r\n            <span className=\"weight\">{item.quantity}</span>\r\n            <span className=\"weight weight-unit\">{item.unit}</span>\r\n          </div>\r\n        </div>\r\n        <svg\r\n          className=\"border\"\r\n          aria-hidden=\"true\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 324 484\"\r\n          preserveAspectRatio=\"none\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            strokeWidth=\"4\"\r\n            d=\"M310 482H14c-6.63 0-12-5.37-12-12V45L45 2h265c6.63 0 12 5.37 12 12v456c0 6.63-5.37 12-12 12z\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <div className=\"action\">\r\n        <span className=\"action-text\">\r\n          {isSelectedBanner && item.bannerText.isNotSelected}\r\n          {isSelectedBanner && (\r\n            <span className=\"link\" onClick={() => setSelected(!isSelected)}>\r\n              купи.\r\n            </span>\r\n          )}\r\n          {isNotSelectedBanner && item.bannerText.isSelected}\r\n          {!item.isInStock && item.bannerText.notInStock}\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nBanner.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    subtitle: PropTypes.string.isRequired,\r\n    subtitleAlt: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    ingredients: PropTypes.string.isRequired,\r\n    portionAmount: PropTypes.string.isRequired,\r\n    portionText: PropTypes.string.isRequired,\r\n    giftAmount: PropTypes.string.isRequired,\r\n    giftText: PropTypes.string.isRequired,\r\n    slogan: PropTypes.string.isRequired,\r\n    quantity: PropTypes.string.isRequired,\r\n    unit: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    isInStock: PropTypes.bool.isRequired,\r\n    isSelected: PropTypes.bool.isRequired,\r\n    bannerText: PropTypes.shape({\r\n      isNotSelected: PropTypes.string.isRequired,\r\n      isSelected: PropTypes.string.isRequired,\r\n      notInStock: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Banner;\r\n","const data = [\r\n  {\r\n    id: '1',\r\n    subtitle: 'Сказочное заморское яство',\r\n    subtitleAlt: 'Котэ не одобряет?',\r\n    title: 'Нямушка',\r\n    ingredients: 'с фуа-гра',\r\n    portionAmount: '10',\r\n    portionText: 'порций',\r\n    giftAmount: '',\r\n    giftText: 'мышь в подарок',\r\n    slogan: '',\r\n    quantity: '0,5',\r\n    unit: 'кг',\r\n    image: 'cat.png',\r\n    isInStock: true,\r\n    isSelected: false,\r\n    bannerText: {\r\n      isNotSelected: 'Чего сидишь? Порадуй котэ, ',\r\n      isSelected: 'Печень утки разварная с артишоками',\r\n      notInStock: 'Печалька, с фуа-гра закончился',\r\n    },\r\n  },\r\n  {\r\n    id: '2',\r\n    subtitle: 'Сказочное заморское яство',\r\n    subtitleAlt: 'Котэ не одобряет?',\r\n    title: 'Нямушка',\r\n    ingredients: 'с рыбой',\r\n    portionAmount: '40',\r\n    portionText: 'порций',\r\n    giftAmount: '2',\r\n    giftText: 'мыши в подарок',\r\n    slogan: '',\r\n    quantity: '2',\r\n    unit: 'кг',\r\n    image: 'cat.png',\r\n    isInStock: true,\r\n    isSelected: false,\r\n    bannerText: {\r\n      isNotSelected: 'Чего сидишь? Порадуй котэ, ',\r\n      isSelected: 'Головы щучьи с чесноком да свежайшая семгушка',\r\n      notInStock: 'Печалька, с рыбой закончился',\r\n    },\r\n  },\r\n  {\r\n    id: '3',\r\n    subtitle: 'Сказочное заморское яство',\r\n    subtitleAlt: 'Котэ не одобряет?',\r\n    title: 'Нямушка',\r\n    ingredients: 'с курой',\r\n    portionAmount: '100',\r\n    portionText: 'порций',\r\n    giftAmount: '5',\r\n    giftText: 'мышей в подарок',\r\n    slogan: 'заказчик доволен',\r\n    quantity: '5',\r\n    unit: 'кг',\r\n    image: 'cat.png',\r\n    isInStock: false,\r\n    isSelected: false,\r\n    bannerText: {\r\n      isNotSelected: 'Чего сидишь? Порадуй котэ, ',\r\n      isSelected: 'Филе из цыплят с трюфелями в бульоне',\r\n      notInStock: 'Печалька, с курой закончился',\r\n    },\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from 'react';\r\nimport Banner from '../Banner';\r\nimport data from '../../data';\r\nimport './styles.scss';\r\n\r\nconst App = () => {\r\n  const banners = data.map((item) => <Banner key={item.id} item={item} />);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"container\">\r\n        <h2 className=\"section-title\">Ты сегодня покормил кота?</h2>\r\n        <ul className=\"banner-list\">{banners}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}